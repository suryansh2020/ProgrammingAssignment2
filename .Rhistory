c <- rbind(c(1,-1/4),c(-1/4,1))
class(c)
c
solve(c)
?solve
environment
?environment
a<-c(1,2,3,4,5)
b<-makevector(a)
environment (b)
source("example.R")
b<-makevector(a)
b<-makeVector(a)
b
environment(b)
evironment(b$set)
environment(b$set)
.globalenv
.GlobalEnv
is.environment(.GlobalEnv)
exists("b", envir= .GlobalEnv)
exists("b", envir= .GlobalEnv)
environment(b)
.GlobalEnv
exists("b", envir= .GlobalEnv)
exists("a", envir= .GlobalEnv)
source("example.R")
environment(a)
environment(b)
?environment
ls()
test <- 1
environment(test)
environment(1)
environment(.GlobalEnv)
environment()
environment(
f <- function()
f <- function() "top level function"
f
environment()
environment(f)
.GlobalEnv
b
environment(b)
environment(a)
c <- 100
(c+1)
(x1 <- c(1:4))
solve(matrix(c(1,1,1,3,4,3,3,3,4),3,3))
source("cachematrix.R")
environment(a)
source("cachematrix.R")
cacheSolve(matrix(c(1,1,1,3,4,3,3,3,4),3,3))
source("examplemean.R")
source("example.R")
ls()
cachemean(c(1,2,3,4,5))
cachemean(c(1,2,3,4,5))
test <- c(1,2,3,4,5)
makeCacheMatrix(test)
makeVector(test)
cachemean(test)
bigVec <- makeVector(1:10)
biggerVec <- makeVector(1:100)
cachemean(bigVec)
cachemean(bigVec)
cachemean(biggerVec)
cachemean(biggerVec)
source("cachematrix.R")
matrix(1:10
)
matrix(2:10)
matrix(1:10,1:10)
matrix(1:10,2)
a <- makeCacheMatrix(matrix(1:10,2))
b <- makeCacheMatrix(matrix(1:100,2))
cacheSolve(a)
a <- makeCacheMatrix(matrix(2,2))
a
cacheSolve(a)
a <- makeCacheMatrix(matrix(1:2,2))
cacheSolve(a)
matrix(1:5)
matrix(1:5,5)
matrix(1:5,1:5)
?matrix
matrix(1:5,nrow= 2, ncol=2)
matrix(1:6,nrow= 2, ncol=2)
matrix(1:4,nrow= 2, ncol=2)
a <- makeCacheMatrix(matrix(1:4,nrow= 2, ncol=2))
a
b <- makeCacheMatrix(matrix(1:4,nrow= 2, ncol=2))
cacheSolve(a)
cacheSolve(a)
cacheSolve(b)
cacheSolve(b)
matrix(1:4,nrow= 2, ncol=2)
solve(matrix(1:4,nrow= 2, ncol=2))
source("cachematrix.R")
cacheSolve(a)
cacheSolve(b)
c <- cacheSolve(b)
c
c[0]
c[0,]
c[1,]
c[1,1]
sum(c)
sum(c[1,])
q() 
n
source("cachematrix.R")
a <- makeCacheMatrix(matrix(1:4,nrow= 2, ncol=2))
b <- makeCacheMatrix(matrix(1:4,nrow= 2, ncol=2))
cacheSolve(b)
cacheSolve(b)
cacheSolve(a)
cacheSolve(a)
ls()
test <- function(var) { hmm << var}
test <- function(var) { hmm <<- var}
test
ls()
a <- c(1)
a
test(a)
ls()
hmm
cacheSolve
cacheSolve$set
exists("cacheSolve$setsolve", envir= .GlobalEnv)
exists("cacheSolve$set", envir= .GlobalEnv)
exists("cacheSolve$setsolve", envir= cacheSolve)
test(var) { list(var,2,3)}
test(var) <- function{ list(var,2,3)}
test <- function(var){ list(var,2,3)}
test
test(4)
test <- function(var){ var2 <- 1 var3 <- 2 list(var,var2,var3)}
test <- function(var){ var2 <- 1 var3 <- 2 list(var,var2,var3)}
test <- function(var){
var2 <- 1
var3 <- 2
list(var,var2,var3)}
test(2)
ls()
a <- makeCacheMatrix(matrix(1:4,nrow= 2, ncol=2))
test <- function(var){
a <- makeCacheMatrix(matrix(1:16,nrow= 4, ncol=4))
cacheSolve(a)
b <- makeCacheMatrix(matrix(1:16,nrow= 4, ncol=4))
cacheSolve(b)
cacheSolve(a)
q()
n
